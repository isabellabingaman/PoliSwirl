- Class: meta
  Course: PoliSwirl
  Lesson: Wrangling
  Author: Isabella Bingaman
  Type: Standard
  Organization: American University
  Version: 2.4.4

- Class: text
  Output: In this lesson, you'll learn how to wrangle political data to work for you. 

- Class: text
  Output: First and foremost, it's not always easy to import your data. Often you'll find political data in an unfamiliar source format. The 'foreign' package can help with that. 
  
  
- Class: text
  Output: The 'foreign' package contains functions to read data from SPSS, Minitab, STATA and other varied formats. We'll use an SPSS file for an example, though each format takes on similar arguments.
  
  


- Class: text
  Output: The function read.spss() will effectively read your data into the console. The first argument read.spss() takes should always be "the name of the dataframe in quotation marks" 

- Class: text
  Output: Additionally, if you wish the result to be displayed in a data frame, make sure to use the argument to.data.frame = TRUE and vice versa for the opposite.  

- Class: text
  Output: If you do NOT want the variables with value labels to be converted into R factors with corresponding levels, you should set the use.value.labels argument to FALSE. 



- Class: mult_question
  Output: Which is the correct command necessary to read the SPSS data named "survey.sav" into a data frame called SPSSData?
  AnswerChoices: SPSSData <- read.spss("survey.sav", to.data.frame = TRUE);read.spss(SPSSData, "survey.sav");SPSSData(read.spss, "survey.sav", to.data.frame = TRUE)
  CorrectAnswer: SPSSData <- read.spss("survey.sav", to.data.frame = TRUE)
  AnswerTests: omnitest(correctVal='SPSSData <- read.spss("survey.sav", to.data.frame = TRUE)')
  Hint: Remember which aspects of the command line are functions and which are arguments.

- Class: text
  Output: Once you've read the data, it's important to make sure your variables are correctly named so that you can reference them quickly and easily.

- Class: text
  Output: Your variables (columns) should be named consistently in either PascalCase, snakecase, or ALLCAPS. PascalCase, as it appears, capitalizes the first letter of each word only. snakecase has all letters in lowercase, and ALLCAPS in uppercase. 

- Class: cmd_question
  Output: Assign the vector c(1:3) to an object named with your first and last name in PascalCase. 
  CorrectAnswer: (^[A-Z][a-z0-9]+[A-Z]$)|(^[A-Z][a-z0-9]+([A-Z][a-z0-9]+)+$)|(^[A-Z][a-z0-9]+([A-Z][a-z0-9]+)+[A-Z]$) <- c(1:3)
  AnswerTests: omnitest(correctExpr='(^[A-Z][a-z0-9]+[A-Z]$)|(^[A-Z][a-z0-9]+([A-Z][a-z0-9]+)+$)|(^[A-Z][a-z0-9]+([A-Z][a-z0-9]+)+[A-Z]$) <- c(1:3)')
  Hint: # Avoid using special characters and consecutive capitals. For example, if your name is Kyle O'Donnell, the correct answer would be KyleOdonnell, not KyleO'Donnell or KyleODonell 


